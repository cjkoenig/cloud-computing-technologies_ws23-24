global:
  scrape_interval:     15s # By default, scrape targets every 15 seconds.

# Load custom rules rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  - custom_alerts.yml

# Alertmanager configuration
alerting:
  alertmanagers:
  - static_configs:
    - targets:
       - alertmanager:9093 # address of our alertmanager service


# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus'

    # Override the global default and scrape targets from this job every 5 seconds.
    scrape_interval: 5s
    static_configs:
      - targets: ['localhost:9090']

  # job for node-exporter: get metrics from a host
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']

  # job for cadvisor: get metrics from containers on a host
  - job_name: 'cadvisor'
    static_configs:
       - targets: ['cadvisor:8080']

  # job for nginx-exporter: get metrics from an nginx-server
  - job_name: 'nginx-exporter': 
    static_configs:
       - targets: ['nginx-exporter:9113']

  # job to get metrics from our web application
  - job_name: 'web-app'
    static_configs:
       - targets: ['web-app:5000']

  # job to probe a http server (observe response code)
  - job_name: 'http-probe'
    metrics_path: /probe
    scrape_timeout: 10s
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - 'http://hsh-monitoring.northeurope.cloudapp.azure.com'  # target url to watch
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: 'blackbox-exporter:9115' # address of your blackbox exporter